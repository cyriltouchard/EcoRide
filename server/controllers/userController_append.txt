
// --- Mettre √† jour le profil utilisateur ---
exports.updateProfile = async (req, res) => {
    try {
        const userId = req.user.id;
        const { pseudo, email, phone, bio } = req.body;
        
        console.log('üìù Mise √† jour profil utilisateur:', userId, req.body);
        
        // V√©rifier si le pseudo est d√©j√† utilis√© par un autre utilisateur
        if (pseudo) {
            const existingPseudo = await UserSQL.findByPseudo(pseudo);
            if (existingPseudo && existingPseudo.id !== userId) {
                return res.status(400).json({
                    success: false,
                    message: 'Ce pseudo est d√©j√† utilis√© par un autre utilisateur'
                });
            }
        }
        
        // V√©rifier si l'email est d√©j√† utilis√© par un autre utilisateur
        if (email) {
            const existingEmail = await UserSQL.findByEmail(email);
            if (existingEmail && existingEmail.id !== userId) {
                return res.status(400).json({
                    success: false,
                    message: 'Cet email est d√©j√† utilis√© par un autre utilisateur'
                });
            }
        }
        
        // Mettre √† jour dans MySQL
        const updateData = {};
        if (pseudo) updateData.pseudo = pseudo;
        if (email) updateData.email = email;
        if (phone !== undefined) updateData.phone = phone;
        if (bio !== undefined) updateData.bio = bio;
        
        const success = await UserSQL.updateProfile(userId, updateData);
        
        if (!success) {
            return res.status(400).json({
                success: false,
                message: '√âchec de la mise √† jour'
            });
        }
        
        // Mettre √† jour dans MongoDB si n√©cessaire
        try {
            const mongoUser = await User.findOne({ sql_id: userId });
            if (mongoUser) {
                if (pseudo) mongoUser.pseudo = pseudo;
                if (email) mongoUser.email = email;
                if (phone !== undefined) mongoUser.phone = phone;
                if (bio !== undefined) mongoUser.bio = bio;
                await mongoUser.save();
            }
        } catch (mongoError) {
            console.log('‚ö†Ô∏è Mise √† jour MongoDB √©chou√©e (non-critique):', mongoError.message);
        }
        
        res.json({
            success: true,
            message: 'Profil mis √† jour avec succ√®s'
        });
        
    } catch (err) {
        console.error('‚ùå Erreur mise √† jour profil:', err);
        res.status(500).json({
            success: false,
            message: err.message || 'Erreur serveur'
        });
    }
};

// --- Mettre √† jour la photo de profil ---
exports.updateProfilePicture = async (req, res) => {
    try {
        const userId = req.user.id;
        const { profile_picture } = req.body;
        
        if (!profile_picture) {
            return res.status(400).json({
                success: false,
                message: 'URL de la photo requise'
            });
        }
        
        console.log('üì∏ Mise √† jour photo de profil:', userId, profile_picture);
        
        // Mettre √† jour dans MySQL
        const success = await UserSQL.updateProfile(userId, { profile_picture });
        
        if (!success) {
            return res.status(400).json({
                success: false,
                message: '√âchec de la mise √† jour'
            });
        }
        
        // Mettre √† jour dans MongoDB si n√©cessaire
        try {
            const mongoUser = await User.findOne({ sql_id: userId });
            if (mongoUser) {
                mongoUser.profile_picture = profile_picture;
                await mongoUser.save();
            }
        } catch (mongoError) {
            console.log('‚ö†Ô∏è Mise √† jour MongoDB √©chou√©e (non-critique):', mongoError.message);
        }
        
        res.json({
            success: true,
            message: 'Photo de profil mise √† jour avec succ√®s'
        });
        
    } catch (err) {
        console.error('‚ùå Erreur mise √† jour photo:', err);
        res.status(500).json({
            success: false,
            message: err.message || 'Erreur serveur'
        });
    }
};
